{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Aqib Reaction Timer\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BlockItem = _resolveComponent(\"BlockItem\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.start && $options.start(...args)),\n    disabled: $data.isPlaying\n  }, \"Click to play\", 8 /* PROPS */, _hoisted_2), $data.isPlaying ? (_openBlock(), _createBlock(_component_BlockItem, {\n    key: 0,\n    delay: $data.delay,\n    onEnd: $options.endGame\n  }, null, 8 /* PROPS */, [\"delay\", \"onEnd\"])) : _createCommentVNode(\"v-if\", true), _ctx.showResults ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"Reaction Time: \" + _toDisplayString($data.score) + \" ms\", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACEA,oBAA4B,YAAxB,qBAAmB;;;;;;;6DAAvBC,UAA4B,EAC5BD,oBAAmE;IAA1DE,OAAK,yCAAEC,yCAAK;IAAGC,QAAQ,EAAEC;KAAW,eAAa,8BACzCA,eAAS,kBAA1BC,aAA4DC;;IAA/BC,KAAK,EAAEH,WAAK;IAAGI,KAAG,EAAEN;oFACxCO,gBAAW,kBAApBC,oBAAuD,iBAAjC,iBAAe,oBAAGN,WAAK,IAAG,KAAG","names":["_createElementVNode","_hoisted_1","onClick","$options","disabled","$data","_createBlock","_component_BlockItem","delay","onEnd","_ctx","_createElementBlock"],"sourceRoot":"","sources":["C:\\Users\\aqibt\\OneDrive\\Documents\\GitHub\\aqib\\src\\App.vue"],"sourcesContent":["<template>\n  <h1>Aqib Reaction Timer</h1>\n  <button @click=\"start\" :disabled=\"isPlaying\">Click to play</button>\n  <BlockItem v-if=\"isPlaying\" :delay=\"delay\" @end=\"endGame\" />\n  <p v-if=\"showResults\">Reaction Time: {{ score }} ms</p>\n</template>\n\n<script>\nimport BlockItem from './components/BlockItem.vue'\n\nexport default {\n  name: 'App',\n  components: { BlockItem },\n  data () {\n    return {\n      isPlaying: false,\n      delay: null,\n      score: null\n    }\n  },\n  methods: {\n    start () {\n      this.delay = 2000 + Math.random() * 5000\n      this.isPlaying = true\n    },\n    endGame (reactionTime) {\n      this.score = reactionTime\n      this.isPlaying = false\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #444;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}